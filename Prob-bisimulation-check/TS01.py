# -*- coding: utf-8 -*-

# Don't Run this Script From here ! '
#
# Run the program from the first script : Welcome.py
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from TS02 import Ui_SecondWindow
from TS03 import ThirdWindow

class Ui_FirstWindow(object):

    def openWindow(self):
        self.window2  = QtWidgets.QMainWindow()
        self.ui2 = Ui_SecondWindow()
        self.backup()
        self.get_nums()                             # it's important for get num function to be before Show function. 
        self.send_dict()
        self.ui2.setupUi(self.window2)                # Because it should deliver the number of cells. 
        self.window2.show()
        self.get_params()
        

    def backup(self): 
        self.window3 = QtWidgets.QMainWindow()
        self.ui3 = ThirdWindow()
        self.get_nums()
        self.send_dict()
        
    def get_nums(self):
        TS02 = self.TS02
        self.ui2.TS02 = TS02
        self.ui2.TS01 = self.TS01
        self.ui3.TS01 = self.TS01
    
    def get_params(self): 
        TS01 = int(self.TS01) 
        #T = TS01 *4 
        self.S = []
        self.L = []
        self.W = []                               # S = Start Nodes, L= label , W = WK , E = End Node .
        self.E = []                               # S = Start Nodes, L= label , W = WK , E = End Node .
       
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        s = 1 
        l = 2
        w = 3 
        e = 4
        for i in range(TS01):

            exec(f'self.S.append(self.lineEdit_{s}.text())')
            exec(f'self.L.append(self.lineEdit_{l}.text())')
            exec(f'self.W.append(self.lineEdit_{w}.text())')
            exec(f'self.E.append(self.lineEdit_{e}.text())')
            s+=4 
            l+=4
            w+=4
            e+=4
        self.S = [x.upper() for x in self.S]  # Start Nodes Should be in Upper Case
        self.L = [x.lower() for x in self.L ]
        self.W = [float(x) for x in self.W]
        self.E = [x.upper() for x in self.E]


    #def show_figure(self):   ** make a separated function to draw the figure and return it back see the 
    # Example in Test_graph.py in tests folder. 
    def graphshow(self):
        from TS01_graph import TS01_graph
        from PyQt5.QtGui import QPixmap
        self.get_params()
        res = self.check_props(self.S, self.L, self.W)
        if res:
            TS01_graph(self.S, self.L, self.W, self.E)
            pixmap = QPixmap("TS01.gy.png")
            self.scene.addPixmap(pixmap)
            self.graphicsView.adjustSize()  #
            #FirstWindow.adjustSize() #
        else :
            from PyQt5.QtWidgets import QMessageBox
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)
            msg.setText("Error, One of Label Probs is not 1")
            msg.setInformativeText('Please recheck the probabilities')
            msg.setWindowTitle("Error")
            msg.exec_()

    def send_dict(self): 
        from convert_list_to_dict_08 import list2dict
        self.get_params()
        TS_01 = list2dict(self.S, self.L, self.W, self.E)
        self.ui2.TS_01 = TS_01
        self.ui3.TS_01 = TS_01

    def check_props(self, S,L,W):                                     # This function check if every node label summation is 1 . 
        # create a dictionary of nodes with their corresponding labels and probabilities
        node_dict = {}
        result = []
        for node, label, prob in zip(S, L, W):
            if node not in node_dict:
                node_dict[node] = {}
            if label not in node_dict[node]:
                node_dict[node][label] = prob
            else:
                node_dict[node][label] += prob

        # check if the summation of each label in a node is equal to 1
        for node, labels in node_dict.items():
            for prob in labels.values():
                if prob != 1:
                    #print("False")
                    result.append('False')
                    
                    #return False
                    break
            else:
                #print("True")
                result.append('True')
                #return True
        if len(set(result)) ==1 and result[0] == 'True':
            return True
        else:
            return False



    def setupUi(self, FirstWindow):
        FirstWindow.setObjectName("FirstWindow")
        FirstWindow.resize(993, 790)
        FirstWindow.setMaximumHeight(5000)      #
        FirstWindow.setMaximumWidth(5000)       #
        FirstWindow.setMinimumSize(993,770)     #

        
        self.centralwidget = QtWidgets.QWidget(FirstWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(40, 60, 650, 17))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding) #

        # new line above
        self.label_1 = QtWidgets.QLabel(self.centralwidget)
        self.label_1.setGeometry(QtCore.QRect(40, 20, 850, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        # font.setBold(True)
        # font.setWeight(75)
        self.label_1.setFont(font)
        self.label_1.setObjectName("label")
        self.label_1.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)


        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView.setGeometry(QtCore.QRect(560, 90, 421, 531))

        self.graphicsView.setResizeAnchor(QtWidgets.QGraphicsView.NoAnchor)                    ## Size flixbility
        self.graphicsView.setMinimumHeight(531)                                                 ## Size flixbility
        self.graphicsView.setMinimumWidth(421)                                                  ## Size flixbility
        self.graphicsView.setMaximumHeight(20000)                                                ## Size flixbility
        self.graphicsView.setMaximumWidth(20000)                                                 ## Size flixbility

        self.graphicsView.setObjectName("graphicsView")
        self.scene = QtWidgets.QGraphicsScene(self.centralwidget)               # important lines
        self.graphicsView.setScene(self.scene)                                  # important lines   
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(620, 60, 300, 27))
        font = QtGui.QFont()
        font.setFamily("AR PL UKai CN")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.label_7.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding) #

        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(830, 720, 150, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.openWindow)                # This is the Connect Line
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(560, 720, 150, 30))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.graphshow)               # Refresh Button Function 
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(41, 101, 100, 19))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_2.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding) #
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(325, 101, 50, 19))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.label_4.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding) #
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(429, 101, 100, 19))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.label_5.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding) #
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(190, 101, 50, 19))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")

        TS01 = int(self.TS01)
        k =1    # name of textboxes
        l = 6   # the label name of (:) label
        h = 140 # height for every line

        for i in range(TS01):

            exec(f'self.lineEdit_{k} = QtWidgets.QLineEdit(self.centralwidget)')
            exec(f'self.lineEdit_{k}.setGeometry(QtCore.QRect(40, h, 111, 31))')
            exec(f'self.lineEdit_{k}.setObjectName("lineEdit_{k}")')
            k = k+1 

            exec(f'self.lineEdit_{k} = QtWidgets.QLineEdit(self.centralwidget)')
            exec(f'self.lineEdit_{k}.setGeometry(QtCore.QRect(160, h, 111, 31))')
            exec(f'self.lineEdit_{k}.setObjectName("lineEdit_{k}")')
            k = k+1 

            exec(f'self.label_{l} = QtWidgets.QLabel(self.centralwidget)')
            exec(f'self.label_{l}.setGeometry(QtCore.QRect(280, h-10, 31, 41))')
            font = QtGui.QFont()
            font.setPointSize(10)
            exec(f'self.label_{l}.setFont(font)')
            exec(f'self.label_{l}.setObjectName("label_{l}")')
            exec(f'self.label_{l}.setText(":")')

            exec(f'self.lineEdit_{k} = QtWidgets.QLineEdit(self.centralwidget)')
            exec(f'self.lineEdit_{k}.setGeometry(QtCore.QRect(290, h, 111, 31))')
            exec(f'self.lineEdit_{k}.setObjectName("lineEdit_{k}")')
            k = k+1 

            exec(f'self.lineEdit_{k} = QtWidgets.QLineEdit(self.centralwidget)')
            exec(f'self.lineEdit_{k}.setGeometry(QtCore.QRect(410, h, 111, 31))')
            exec(f'self.lineEdit_{k}.setObjectName("lineEdit_{k}")')
            k = k+1 
            h = h+40

        

        FirstWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(FirstWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 993, 22))
        self.menubar.setObjectName("menubar")
        FirstWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(FirstWindow)
        self.statusbar.setObjectName("statusbar")
        FirstWindow.setStatusBar(self.statusbar)

        self.retranslateUi(FirstWindow)
        QtCore.QMetaObject.connectSlotsByName(FirstWindow)

    def retranslateUi(self, FirstWindow):
        _translate = QtCore.QCoreApplication.translate
        FirstWindow.setWindowTitle(_translate("FirstWindow", "Transition system 01"))
        self.label.setText(_translate("FirstWindow", "Please enter the transitions on each line:"))
        self.label_7.setText(_translate("FirstWindow", "Transition system 01 Graph"))
        self.pushButton.setText(_translate("FirstWindow", "Next"))
        self.pushButton_2.setText(_translate("FirstWindow", "Show"))
        self.label_2.setText(_translate("FirstWindow", "Start Node"))
        self.label_4.setText(_translate("FirstWindow", "Prob"))
        self.label_5.setText(_translate("FirstWindow", "End Node"))
        self.label_3.setText(_translate("FirstWindow", "Label"))

        self.label_1.setText(_translate("FirstWindow", "With this first transition system man can compare other different transition systems."))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    FirstWindow = QtWidgets.QMainWindow()
    ui = Ui_FirstWindow()
    ui.setupUi(FirstWindow)
    FirstWindow.show()
    sys.exit(app.exec_())
